

// 
// BUTTONS MODULE
// 

/*
	Button Usage:

	- <button> or .button declares button
	- declare a button style:
		- ghost (hollow bg)
		- solid (default)
		- compound (ghosted w/ a title)
	- declare a color scheme
		- button-foreground-background
		- button-white-blue (default)


	Button notes:
	- Standard button height are 32px (2rem)
	- all buttons are defined w/ border for height standardization
		- solid buttons match border w/ bg color

	TODO:
	- shift reference to .button instead of <button> tag, since we need <a> to also look like buttons
*/

$cmu-style-button-borderwidth: remCalc(2px);
$cmu-button-fontsize: $size-xsmaller;
$cmu-button-fontsize--icon: $size-normal;
$cmu-button-lineheight: $cmu-cta-height;
$cmu-button-letterspacing: remCalc(0.5px);
$cmu-button-color-base: $cmu-color-blue;


@mixin cmuButton($type, $fgColor: $cmu-button-color-base, $bgColor:default, $hoverFgColor:default, $hoverBgColor:default) {

	@extend %user-select-none;

	color: $fgColor;
	background-color: $bgColor;
	// bgcolor is just defaulted to the background color

	// border-color: $borderColor;
	@if $type == 'solid' {
		@if $bgColor == default {
			$bgColor: $cmu-color-blue;
		}
		color: $fgColor;
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $fgColor; // can't use transparent
			background-color: darken($bgColor, 10);
			border-color: darken($bgColor, 10);
		}

	} @else if $type == 'vote' {
		// base text is body color
		// foreground color: text
		// background color: action and border
		background-color: transparent; // button itself is transparent

		color: $fgColor;
		// background-color: $bgColor;
		border-color: $bgColor;
		border-width: 1px;
    	line-height: 0.9rem; // these are always 1px borders
		padding: 0;
		
		.button--vote--points {
			display: inline-block;
			// color: $bgColor;
			// background-color: $fgColor;
			background-color: transparent; // this part is always white 
			padding: $cmu-base/2;
			color: $cmu-color-body;
			@extend %ease-fast;
		}
		.button--vote--action {
			display: inline-block;
			background-color: $bgColor;
			// color: $fgColor;
			padding: $cmu-base/2;
			color: $cmu-color-body;
			@extend %ease-fast;
		}


		&:hover {
			border-color: $hoverBgColor;
			.button--vote--points {
				@extend %ease-fast;
				color: $hoverFgColor;
			}
			.button--vote--action {
				// using the hover color here is too drastic and doesn't add interaction on click
				@extend %ease-fast;
				color: $cmu-color-white;
				background-color: $hoverBgColor;
				// use a darker background instead
				// background-color: lighten($bgColor, 5%);
			}
		}
		// on click, make exciting
		&:active {
			.button--vote--action {
				// using the hover color here is too drastic and doesn't add interaction on click
				@extend %ease-fast;
				// color: $hoverBgColor;
				background-color: lighten($hoverBgColor, 30%);
				// use a darker background instead
				// background-color: lighten($bgColor, 5%);
			}
		}

		// voted (same as hover)
		&.button--voted {
			border-color: $hoverBgColor;
			.button--vote--points {
				@extend %ease-fast;
				color: $hoverFgColor;
			}
			.button--vote--action {
				@extend %ease-fast;
				color: $cmu-color-white;
				background-color: $hoverBgColor;
			}


			&:hover {
				.button--vote--action {
					background-color: darken($hoverBgColor, 8%);
				}
			}
		}

	} @else if $type == 'ghost' {
		@if $bgColor == default {
			$bgColor: $cmu-color-white;
		}

		// ghost is default
		color: $fgColor;
		background-color: $bgColor;
		border-color: $fgColor;

		&:hover {
			color: $cmu-color-black; // can't use transparent
			// background-color: $fgColor;
			border-color: $cmu-color-black;
		}
	} @else if $type == 'outline' {
		border-width: 1px;
		padding-top: 1px;
		padding-bottom: 1px;

		@if $bgColor == default {
			$bgColor: $cmu-color-white;
		}

		// ghost is default
		color: $fgColor;
		background-color: $bgColor;
		border-color: $fgColor;

		&:hover {
			color: $hoverFgColor; // can't use transparent
			background-color: $hoverBgColor;
			border-color: $fgColor;
		}
	} @else if $type == 'naked' {
		$bgColor: transparent;

		color: $fgColor;
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $hoverFgColor; // can't use transparent
			background-color: $bgColor;
			border-color: $bgColor;
		}
	}

}



button, .button, .cmuButton {
	font-size: $cmu-button-fontsize;
	text-transform: uppercase;

	line-height: $cmu-button-lineheight - $cmu-style-button-borderwidth * 2;
	letter-spacing: $cmu-button-letterspacing;

	// all buttons need borders, even if they're the same color as the bg
	border-width: $cmu-style-button-borderwidth;
	border-style: solid;
	padding: 0 $cmu-base/2;

	@include cmuButton('ghost');
	@extend %ease-fast;

	// important! this overrides the disabled default cursor
	// we want all buttons to be clickable, and redirect users to the login / sign up process
	cursor: pointer !important;

	// space them out if next to each other // apparently doesn't work
	&+&, &+select {
		margin-left: $cmu-base/2;
	}
}
	button + .button {
		margin-left: $cmu-base/2;
	}
	.button+.button {
		margin-left: $cmu-base/2;
	}




// 
// BUTTON STYLES
// 

// GHOST Buttons
// thick outline w/ transparent background
.button--ghost {
	$mode: 'ghost';
	@include cmuButton($mode,$cmu-button-color-base);

	&.button-green-on-white {
		@include cmuButton($mode,$cmu-color-green);
	}
	&.button-black-on-white {
		@include cmuButton($mode,$cmu-color-xdkgray);
	}
	&.button-gray-on-white {
		@include cmuButton($mode,$cmu-color-mdgray);
	}
	&.button-ltgray-on-white {
		@include cmuButton($mode,$cmu-color-ltgray);
	}
}

// OUTLINE Buttons
// thin outline w/ transparent background
.button--outline {
	$mode: 'outline';
	@include cmuButton($mode,$cmu-button-color-base);

	&.button-green-on-white {
		@include cmuButton($mode,$cmu-color-green);
	}
	&.button-black-on-white {
		@include cmuButton($mode,$cmu-color-xdkgray);
	}
	&.button-gray-on-white {
		@include cmuButton($mode,$cmu-color-gray);
	}
	&.button-ltgray-on-white {
		@include cmuButton($mode,$cmu-color-mdgray);
	}
	&.button-blue-on-black {
		@include cmuButton($mode,$cmu-color-dkblue,$cmu-color-black,$cmu-color-blue,$cmu-color-black);
	}
	&.button-gray-on-black {
		@include cmuButton($mode,$cmu-color-gray,$cmu-color-black,$cmu-color-dkgray,$cmu-color-black);
	}
}


// SOLID Buttons
.button--solid {
	$mode: 'solid';
	@include cmuButton($mode,$cmu-color-white,$cmu-color-blue);

	&.button-white-on-green {
		@include cmuButton($mode,$cmu-color-white,$cmu-color-green);
	}
	&.button-white-on-black {
		@include cmuButton($mode,$cmu-color-white,$cmu-color-xdkgray);
	}
	&.button-blue-on-black {
		@include cmuButton($mode,$cmu-color-dkblue,$cmu-color-ltblack);
	}
}

// NAKED Buttons
// Buttons without the chrome (acts like buttons, unlike links will align with other buttons)
// these are used for smaller / less precedence
// default: placed left

.button--naked {
	$mode: 'naked';
	text-align: left;
	&.button--naked--right {
		text-align: right;
		padding-right: 0;
	}

	@include cmuButton($mode,$cmu-color-blue,$cmu-color-white,$cmu-color-black);

	&.button-black-on-white {
		@include cmuButton($mode,$cmu-color-black,$cmu-color-white,$cmu-color-blue);
	}
	// &.button-white-on-black {
	// 	@include cmuButton('naked',$cmu-color-white,$cmu-color-black);
	// }
}



// 
// SPECIAL STYLES
// 

// buttons with icons
button, .button {

	// default treat icon on the left
	.icon {
		margin-right: $cmu-base/4;
		font-weight: 800;
		font-size: $cmu-button-fontsize--icon;
		position: relative;
		top: 1px;
	}
}

.button--padded {
	padding-left: $cmu-base*2;
	padding-right: $cmu-base*2;
 }

.button--thin {
	line-height: remCalc(20px);
 }

.button--large {
	padding-left: $cmu-base*3;
	padding-right: $cmu-base*3;
	padding-top: $cmu-base;
	padding-bottom: $cmu-base;

 }



 // 
 // Vote Button Style
 // 
.button--vote {
	text-align: left;

	@include cmuButton('vote',$cmu-color-body, $cmu-color-ltgray, $cmu-color-blue, $cmu-color-blue);

	// active state
	// this is super distracting
	// (users can take an action)
	// .button--vote--action {
	// 	&:after {
	// 		content: 'S';
	// 	}
	// }


	// kudos are green
	&.button--vote--kudo {
		@include cmuButton('vote',$cmu-color-body, $cmu-color-ltgray, $cmu-color-green, $cmu-color-green);
		
		&:after {
			background-color: $cmu-color-green;
		}
	}

	&.button--thin {
    	line-height: 0.4rem;

		.button--vote--points {
			padding: $cmu-base/2 $cmu-base/4;
		}
	}

}

.button--wide {
	padding-left: $cmu-base;
	padding-right: $cmu-base;
}
.button--stretch {
	width: 100%;
 }
.button--center {
	text-align: center;
 }
.button--tall {
	padding-top: $cmu-base/2;
	padding-bottom: $cmu-base/2;
}
.button--lowercase {
	text-transform: lowercase;
}
.button--extraSpace {
	margin-left: $cmu-base;
	margin-right: $cmu-base;
}



// handling icons inside buttons
.button--icon {
	padding-left: 8px;
}



// disabled wrapper
// MAYBE we shouldn't style these differently and they just forward you to login

// .cmuDisabled {
// 	.button, button {
// 		background-color: $cmu-color-ltgray;
// 		border-color: $cmu-color-ltgray;
// 	}
// }



// 
// tabs
// 

.button--tab {
	@include cmuButton('outline',$cmu-color-line,$cmu-color-ltgray);
	color: $cmu-color-unselected;
	background-color: $cmu-color-unselected--background;
	margin-left: 0;
	display: inline-block;
    margin-top: -1px;
    position:relative;
    z-index: inherit;
	@extend %ease-fast;

	&:not(.active):hover {
		@extend %ease-fast;
		color: $cmu-color-selected;
		border-color: $cmu-color-selected;
    	z-index: $z-top; // prevents border overlap bug since we only want to show one button's border
		// background-color: $cmu-color-hover--background;
	}

	&:first-child {
		margin-right: -1px;
	}


	&:before {
		@extend %ease-fast;
		content: ' ';
		display: block;
		position: absolute;
		left: 0;
	    top: -1px;
	    width: 100%;
		border-top: 3px solid transparent;
	}

	&.active {
		@extend %ease-none;
		// border-top: 3px solid $cmu-color-selected;
		color: $cmu-color-selected;
		// background-color: $cmu-color-selected--background;
		// line-height: $cmu-button-lineheight - remCalc(3px) * 2;
		// top: 1px;
		
		border-bottom-color: $cmu-color-bodybg;
		z-index: $z-overlay;

		&:before {
			@extend %ease-fast;
			border-top: 3px solid $cmu-color-selected;
			position: absolute;
			left: 0;
		    top: -1px;
		    width: 100%;
		}
	}
}
	.button--tabContainer {
		border: $style-line;
		margin-top: -1px;
	}




