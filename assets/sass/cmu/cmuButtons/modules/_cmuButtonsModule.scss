

// 
// BUTTONS MODULE
// 

/*
	Button Usage:

	- <button> or .button declares button
	- declare a button style:
		- ghost (hollow bg)
		- solid (default)
		- compound (ghosted w/ a title)
	- declare a color scheme
		- button-foreground-background
		- button-white-blue (default)


	Button notes:
	- Standard button height are 32px (2rem)
	- all buttons are defined w/ border for height standardization
		- solid buttons match border w/ bg color
*/

// 
// 
// 

$cmu-style-button-borderwidth: remCalc(2px);

$cmu-button-fontsize: $cmu-size-xsmaller;
$cmu-button-lineheight: $cmu-cta-height;
$cmu-button-letterspacing: remCalc(0.5px);

$cmu-button-color-base: $cmu-color-blue;


@mixin cmuButton($type, $fgColor: $cmu-button-color-base, $bgColor:default, $hoverFgColor:default, $hoverBgColor:default) {

	color: $fgColor;
	background-color: $bgColor;
	// bgcolor is just defaulted to the background color

	// border-color: $borderColor;
	@if $type == 'solid' {
		@if $bgColor == default {
			$bgColor: $cmu-color-blue;
		}
		color: $fgColor;
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $fgColor; // can't use transparent
			background-color: darken($bgColor, 10);
			border-color: darken($bgColor, 10);
		}

	} @else if $type == 'compound' {
		background-color: $bgColor;
		border-color: $bgColor;
		border-color: $cmu-color-white;
		// border-left-color: $bgColor;
		
		.button--compound--data {
			color: $bgColor;
			background-color: $fgColor;
		}
		.button--compound--action {
			background: $bgColor;
			color: $fgColor;
		}


		&:hover {
			border-color: $bgColor;
			.button--compound--data {
				// color: $fgColor; // can't use transparent
				// background-color: $bgColor !important;
			}
		}

	} @else if $type == 'compound-naked' {
		$bgColor: transparent;

		color: $fgColor;
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $hoverFgColor; // can't use transparent
			background-color: $bgColor;
			border-color: $hoverFgColor;
		}

	} @else if $type == 'ghost' {
		@if $bgColor == default {
			$bgColor: $cmu-color-white;
		}

		// ghost is default
		color: $fgColor;
		background-color: $bgColor;
		border-color: $fgColor;

		&:hover {
			color: $cmu-color-white; // can't use transparent
			background-color: $fgColor;
			border-color: $fgColor;
		}
	} @else if $type == 'naked' {
		$bgColor: transparent;

		color: $fgColor;
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $hoverFgColor; // can't use transparent
			background-color: $bgColor;
			border-color: $bgColor;
		}
	}


	// specialty icons
	.icon {
		font-weight: 800;
		font-size: $cmu-size-normal;
		position: relative;
		top: 1px;
	}
}



button, .button {
	font-size: $cmu-size-xsmaller;
	text-transform: uppercase;

	line-height: $cmu-button-lineheight - $cmu-style-button-borderwidth * 2;
	letter-spacing: $cmu-button-letterspacing;

	// all buttons need borders, even if they're the same color as the bg
	border-width: $cmu-style-button-borderwidth;
	border-style: solid;
	padding: 0 $cmu-base/2;

	@include cmuButton('ghost');
	@extend %ease-fast;

	// space them out if next to each other
	&+& {
		margin-left: $cmu-base/2;
	}
}




// 
// BUTTON STYLES
// 

// GHOST Buttons
// thick outline w/ transparent background
.button--ghost {
	@include cmuButton('ghost',$cmu-button-color-base);

	&.button-green-on-white {
		@include cmuButton('ghost',$cmu-color-green);
	}
	&.button-black-on-white {
		@include cmuButton('ghost',$cmu-color-xdkgray);
	}
	&.button-gray-on-white {
		@include cmuButton('ghost',$cmu-color-mdgray);
	}
}

// SOLID Buttons
.button--solid {
	@include cmuButton('solid',$cmu-color-white,$cmu-color-blue);

	&.button-white-on-green {
		@include cmuButton('solid',$cmu-color-white,$cmu-color-green);
	}
	&.button-white-on-black {
		@include cmuButton('solid',$cmu-color-white,$cmu-color-xdkgray);
	}
}

// NAKED Buttons
// Buttons without the chrome (acts like buttons, unlike links will align with other buttons)
// these are used for smaller / less precedence
// default: placed left

.button--naked {
	text-align: left;
	&.button--naked--right {
		text-align: right;
		padding-right: 0;
	}

	@include cmuButton('naked',$cmu-color-blue,$cmu-color-white,$cmu-color-black);

	&.button-black-on-white {
		@include cmuButton('naked',$cmu-color-black,$cmu-color-white,$cmu-color-blue);
	}
	// &.button-white-on-black {
	// 	@include cmuButton('naked',$cmu-color-white,$cmu-color-black);
	// }
}


// COMPOUND Buttons
// these have an ACTIVE state / class which can be turned on or off
// (default is off)
.button--compound {
	@include cmuButton('compound',$cmu-color-white,$cmu-color-blue);

	// border: $cmu-style-button-borderwidth solid $cmu-color-blue;
	// @extend %ease-fast;
	&:hover {
		// @extend %ease-fast;

		.button--compound--data {
			padding: 0 $cmu-base/2 !important;
		}

		.button--compound--action {
			display: inherit;
		}
	}
	padding: 0;
	div { display: inline-block;}

	.button--compound--data {
		padding: 0 $cmu-base/2;
		padding-left: 0;
		@extend %ease-fast;
		.icon {margin-right: 0;}
	}

	.button--compound--action {
		padding: 0 $cmu-base/2;
		display: none;
		// specialty icons
		// .icon {margin-right: 0;}
	}

	&.button-green-on-white {
		@include cmuButton('compound',$cmu-color-white,$cmu-color-green);
	}

}

// COMPOUND NAKED
// similar to COMPOUND, these don't have any of the chrome, bg and outlines
.button--compound-naked {

	text-align: left;

	@include cmuButton('compound-naked',$cmu-color-blue,$cmu-color-white,$cmu-color-blue);

	&.button-black-on-white {
		@include cmuButton('compound-naked',$cmu-color-black,$cmu-color-white,$cmu-color-blue);
	}
	// &.button-white-on-black {
	// 	@include cmuButton('naked',$cmu-color-white,$cmu-color-black);
	// }
}


.button--kudos {
	&:hover {
		span:before {
			content: "+1";
			margin-right: $cmu-base/4;
		}
	}
}

// 
// SPECIAL STYLES
// 

// buttons with icons
button, .button {

	// default treat icon on the left
	.icon {
		margin-right: $cmu-base/4;
	}
}

.button--wide {
	width: 100%
 }
