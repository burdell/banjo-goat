

// 
// BUTTONS MODULE
// 

/*
	Button Usage:

	- <button> or .button declares button
	- declare a button style:
		- ghost (hollow bg)
		- solid (default)
		- compound (ghosted w/ a title)
	- declare a color scheme
		- button-foreground-background
		- button-white-blue (default)


	Button notes:
	- Standard button height are 32px (2rem)
	- all buttons are defined w/ border for height standardization
		- solid buttons match border w/ bg color
*/

// 
// 
// 

$cmu-style-button-borderwidth: remCalc(2px);

$cmu-button-fontsize: $cmu-size-xsmaller;
$cmu-button-lineheight: $cmu-cta-height;
$cmu-button-letterspacing: remCalc(0.5px);

$cmu-button-color-base: $cmu-color-black;


@mixin cmuButton($type, $fgColor: $cmu-button-color-base, $bgColor:default, $hoverFgColor:default, $hoverBgColor:default) {

	color: $fgColor;
	background-color: $bgColor;
	// bgcolor is just defaulted to the background color

	// border-color: $borderColor;
	@if $type == 'solid' {
		@if $bgColor == default {
			$bgColor: $cmu-color-blue;
		}
		color: $fgColor;
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $fgColor; // can't use transparent
			background-color: darken($bgColor, 10);
			border-color: darken($bgColor, 10);
		}

	} @else if $type == 'compound' {
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $bgColor; // can't use transparent
			background-color: purple !important;
			border-color: $fgColor;
		}

	} @else if $type == 'ghost' {
		@if $bgColor == default {
			$bgColor: $cmu-color-white;
		}

		// ghost is default
		color: $fgColor;
		background-color: $bgColor;
		border-color: $fgColor;

		&:hover {
			color: $cmu-color-white; // can't use transparent
			background-color: $fgColor;
			border-color: $fgColor;
		}
	} @else if $type == 'naked' {
		$bgColor: transparent;

		color: $fgColor;
		background-color: $bgColor;
		border-color: $bgColor;

		&:hover {
			color: $hoverFgColor; // can't use transparent
			background-color: $bgColor;
			border-color: $bgColor;
		}
	}


}



button, .button {
	font-size: $cmu-size-xsmaller;
	text-transform: uppercase;

	line-height: $cmu-button-lineheight - $cmu-style-button-borderwidth * 2;
	letter-spacing: $cmu-button-letterspacing;

	// all buttons need borders, even if they're the same color as the bg
	border-width: $cmu-style-button-borderwidth;
	border-style: solid;
	padding: 0 $cmu-base/2;

	@include cmuButton('ghost');
	@extend %ease-fast;
}




// 
// BUTTON STYLES
// 

// GHOST Buttons
// thick outline w/ transparent background
.button--ghost {
	@include cmuButton('ghost',$cmu-button-color-base);

	&.button-green-on-white {
		@include cmuButton('ghost',$cmu-color-green);
	}
	&.button-black-on-white {
		@include cmuButton('ghost',$cmu-color-black);
	}
	&.button-gray-on-white {
		@include cmuButton('ghost',$cmu-color-mdgray);
	}
}

// SOLID Buttons
.button--solid {
	@include cmuButton('solid',$cmu-color-white,$cmu-color-blue);

	&.button-white-on-green {
		@include cmuButton('solid',$cmu-color-white,$cmu-color-green);
	}
	&.button-white-on-black {
		@include cmuButton('solid',$cmu-color-white,$cmu-color-black);
	}
}

// NAKED Buttons
// Buttons without the chrome (acts like buttons, unlike links will align with other buttons)
// these are used for smaller / less precedence
// default: placed left

.button--naked {
	text-align: left;
	&.button--naked--right {
		text-align: right;
		padding-right: 0;
	}

	@include cmuButton('naked',$cmu-color-blue,$cmu-color-white,$cmu-color-black);

	&.button-black-on-white {
		@include cmuButton('naked',$cmu-color-black,$cmu-color-white,$cmu-color-blue);
	}
	// &.button-white-on-black {
	// 	@include cmuButton('naked',$cmu-color-white,$cmu-color-black);
	// }
}


// COMPOUND Buttons
%style-button-compound {
	border: $cmu-style-button-borderwidth solid $cmu-color-blue;
	font-size: $cmu-button-fontsize;
	@extend %ease-fast;
	padding: 0;

	span {
		display: inline-block;
	}

	span:nth-child(1) {
		padding: $cmu-base/2 - ($cmu-style-button-borderwidth) $cmu-base;
		background-color: $cmu-color-white;
		color: $cmu-color-green;
	}

	span:nth-child(2) {
		padding: $cmu-base/2 - ($cmu-style-button-borderwidth) $cmu-base;
		line-height: 16px;
	}

	&:hover {
		border-color: $cmu-color-green;
		background-color: $cmu-color-green;
		span:nth-child(1) {
			@extend %ease-fast;
			background-color: $cmu-color-green;
			color: $cmu-color-white;
		}
		span:nth-child(2) {
			border-color-left: $cmu-color-white;
			color: $cmu-color-white;
		}
	}
}



// .button--solid {
// 	@extend %style-button-solid;
// 	border: 0;
// }

// .button-compound {
// 	@extend %style-button-compound;
// }


// .button-white-green {
// 	background-color: $cmu-color-white;
// 	color: $cmu-color-green;
// 	border-color: $cmu-color-green;
// }
// 	span {
// 		padding: 0 $cmu-base/2;
// 		background-color: $cmu-color-green;
// 		color: $cmu-color-white;
// 	}

// 	&:hover {
// 		color: $cmu-color-white;
// 		background-color: $cmu-color-green;
// 		border-color: $cmu-color-green;
// 	}

// }

// .button-white-blue {
// 	background-color: $cmu-color-white;
// 	color: $cmu-color-blue;
// 	border-color: $cmu-color-blue;

// 	&:hover {
// 		color: $cmu-color-white;
// 		background-color: $cmu-color-blue;
// 		border-color: $cmu-color-blue;
// 	}

// }


// .button-blue-white {
// 	// background-color: $cmu-color-blue;
// 	// color: $cmu-color-white;
// 	// @extend %style-button-ghost;
// 	// border: $cmu-color-blue;
// }

// .button-black-white {
// 	background-color: $cmu-color-black;
// 	color: $cmu-color-white;
// 	// @extend %style-button-ghost;
// 	border: $cmu-color-blue;
// }



// 
// SPECIAL STYLES
// 

// buttons with icons
button, .button {

	// default treat icon on the left
	.icon {
		margin-right: $cmu-base/2;
	}
}

.button--wide {
	width: 100%
 }
