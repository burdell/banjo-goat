---
layout: layout-post
title: Layout & Grid
promote: true
summary: The Community site uses a fully responsive grid and fluid width.
status: COM
rootUrl: ../../
menu:
 - name: Page Layout
   url: pagelayout
 - name: Grid System
   url: gridsystem
---



div(anchor #pagelayout).   

h2. Page Layout

The Community uses a fluid (100% width), responsive grid with several breakpoints up to 1440px. The Community is fully responsive, and will additionally support Tapatalk.

Note that the base code supports site up to @2400px@ by default, but we restrict the Community to a maximum of @1440px@ for now.






h3. Default Breakpoint Sizes

These are the default breakpoint sizes as defined in the Base Framework. 

div(note). These breakpoints are not currently used on the current .COM site, or anywhere else.



<notextile>
	<div class="community noPaddingRight noPaddingLeft">

		<div class="exampleContainerScroll container container--responsive container--centered noPaddingLeft">

			<!-- XS -->
			<div class="row row--comfy">
			  <div style="width:480px; margin-left: 16px">
			    <div class="docCell docCell--odd"><span class="visible--xs"></span>Extra Small: 0 to 480px</div>
			  </div>
			</div>

			<div class="row row--comfy">
			  <div style="width:800px; margin-left: 16px">
			    <div class="docCell docCell--even"><span class="visible--xs"></span>Small: 481 to 800px</div>
			  </div>
			</div>

			<div class="row row--comfy">
			  <div style="width:1040px; margin-left: 16px">
			    <div class="docCell docCell--odd"><span class="visible--xs"></span>Medium: 801 to 1040px</div>
			  </div>
			</div>

			<div class="row row--comfy">
			  <div style="width:1440px; margin-left: 16px">
			    <div class="docCell docCell--even"><span class="visible--xs"></span>Large: 1041 to 1440px</div>
			  </div>
			</div>

			<div class="row row--comfy">
			  <div style="width:1920px; margin-left: 16px">
			    <div class="docCell docCell--odd"><span class="visible--xs"></span>X large: 1441 to 1920px</div>
			  </div>
			</div>
			<div class="row row--comfy">
			  <div style="width:2400px; margin-left: 16px">
			    <div class="docCell docCell--even"><span class="visible--xs"></span>XX large: 1921 to 2400px</div>
			  </div>
			</div>
		</div>

	</div>
</notextile>


{% highlight scss %}

// Extra Small: 0 to 480px
$base-lower-xsmall: 0px !default;
$base-upper-xsmall: 480px !default;
$base-xsmall-up: $base-screen;
$base-xsmall-down: "#{$base-screen} and (max-width: #{$base-upper-xsmall})";
$base-xsmall-only: "#{$base-screen} and (max-width: #{$base-upper-xsmall})";

// Small: 481 to 800px
$base-lower-small: 481px !default;
$base-upper-small: 800px !default;
$base-small-up: "#{$base-screen} and (min-width: #{$base-lower-small})";
$base-small-down: "#{$base-screen} and (max-width: #{$base-upper-small})";
$base-small-only: "#{$base-screen} and (min-width:#{$base-lower-small}) and (max-width:#{$base-upper-small})";

// Medium: 801 to 1040px
$base-lower-medium: 801px !default;
$base-upper-medium: 1040px !default;
$base-medium-up: "#{$base-screen} and (min-width:#{$base-lower-medium})";
$base-medium-down: "#{$base-screen} and (max-width:#{$base-upper-medium})";
$base-medium-only: "#{$base-screen} and (min-width:#{$base-lower-medium}) and (max-width:#{$base-upper-medium})";

// Large: 1041 to 1440px
$base-lower-large: 1041px !default;
$base-upper-large: 1440px !default;
$base-large-up: "#{$base-screen} and (min-width:#{$base-lower-large})";
$base-large-down: "#{$base-screen} and (max-width:#{$base-upper-large})";
$base-large-only: "#{$base-screen} and (min-width:#{$base-lower-large}) and (max-width:#{$base-upper-large})";

// X large: 1441 to 1920px
$base-lower-xlarge: 1441px !default;
$base-upper-xlarge: 1920px !default;
$base-xlarge-up: "#{$base-screen} and (min-width:#{$base-lower-xlarge})";
$base-xlarge-down: "#{$base-screen} and (max-width:#{$base-upper-xlarge})";
$base-xlarge-only: "#{$base-screen} and (min-width:#{$base-lower-xlarge}) and (max-width:#{$base-upper-xlarge})";

// XX large: 1921 to 2400px
$base-lower-xxlarge: 1921px !default;
$base-upper-xxlarge: 2400px !default;
$base-xxlarge-up: "#{$base-screen} and (min-width:#{$base-lower-xxlarge})";
$base-xxlarge-down: "#{$base-screen} and (max-width:#{$base-upper-xxlarge})";
$base-xxlarge-only: "#{$base-screen} and (min-width:#{$base-lower-xxlarge}) and (max-width:#{$base-upper-xxlarge})";

{% endhighlight %}


























h3. Breakpoint Display & Visibility

Equivalent classes also exist for the breakpoint sizes. These are used to respond to display sizes in markup. A green dot means that the marked class is currently visible.

<notextile>
	<div class="community noPadding">

		<div class="container noPadding noMargin container--responsive container--centered breakpoint_example">

			<!-- XS -->
			<div class="row row--comfy">
			  <div class="col--xs6 noPadding">
			    <div class="docCell docCell--odd"><span class="visible--xs"></span>(0 to 480) .visible--xs</div>
			  </div>
			  <div class="col--xs6 noPadding">
			    <div class="visible--xsUp docCell docCell--even"><span class="visible--xsUp"></span>(0<=) .visible--xsUp</div>
			  </div>
			</div>

			<!-- SM -->
			<div class="row row--comfy">
			  <div class="col--xs4 noPadding">
			    <div class="docCell docCell--even"><span class="visible--smDown"></span>(<=800) .visible--smDown</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--odd"><span class="visible--sm"></span>(481 to 800) .visible--sm</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--even"><span class="visible--smUp"></span>(481<=) .visible--smUp</div>
			  </div>
			</div>

			<!-- MD -->
			<div class="row row--comfy">
			  <div class="col--xs4 noPadding">
			    <div class="docCell docCell--even"><span class="visible--mdDown"></span>(<=1040) .visible--mdDown</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--odd"><span class="visible--md"></span>(801 to 1040) .visible--md</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--even"><span class="visible--mdUp"></span>(801<=) .visible--mdUp</div>
			  </div>
			</div>

			<!-- LG -->
			<div class="row row--comfy">
			  <div class="col--xs4 noPadding">
			    <div class="docCell docCell--even"><span class="visible--lgDown"></span>(<=1440) .visible--lgDown</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--odd"><span class="visible--lg"></span>(1041 to 1440) .visible--lg</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--even"><span class="visible--lgUp"></span>(1041<=) .visible--lgUp</div>
			  </div>
			</div>

			<!-- XLG -->
			<div class="row row--comfy">
			  <div class="col--xs4 noPadding">
			    <div class="docCell docCell--even"><span class="visible--xlgDown"></span>(<=1920) .visible--xlgDown</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--odd"><span class="visible--xlg"></span>(1441 to 1920) .visible--xlg</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--even"><span class="visible--xlgUp"></span>(1441<=) .visible--xlgUp</div>
			  </div>
			</div>

			<!-- XXLG -->
			<div class="row row--comfy">
			  <div class="col--xs4 noPadding">
			    <div class="docCell docCell--even"><span class="visible--xxlgDown"></span>(<=2400) .visible--xxlgDown</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--odd"><span class="visible--xxlg"></span>(1921 to 2400) .visible--xxlg</div>
			  </div>
			  <div class="col--xs4 noPadding">
			    <div class="visible--xsUp docCell docCell--even"><span class="visible--xxlgUp"></span>(1921<=) .visible--xxlgUp</div>
			  </div>
			</div>



		</div>

	</div>
</notextile>

{% highlight scss %}

//the below will not work since this is the smallest width
.visible--xs, 
.visible--xsUp, 

.visible--smDown, 
.visible--sm,
.visible--smUp

.visible--mdDown, 
.visible--md, 
.visible--mdUp, 

.visible--lgDown,
.visible--lg,
.visible--lgUp,

.visible--xlgDown,
.visible--xlg,
.visible--xlgUp,

.visible--xxlgDown,
.visible--xxlg,
.visible--xxlgUp,
//the above will not work since this is the highest width

{% endhighlight %}
























<!-- 

GRID SYSYEM

 -->









div(anchor #gridsystem).   

h2. Grid System

The responsive grid system uses the "COM grid system":http://ubnt-css.herokuapp.com/#/base/grid, a 12-column, fluid width grid and stretches 100% to fit its parent container. Note to only encapsulate all rows in a @container@ only once.

<notextile>
	<div class="community">
		<div class="container">
		  <div class="row row--comfy">
		    <div class="col--xs12">
		      <div class="docCell docCell--even">.col--xs12</div>
		    </div>
		  </div>
		  <div class="row row--comfy">
		    <div class="col--xs1">
		      <div class="docCell docCell--even">.col--xs1</div>
		    </div>
		    <div class="col--xs11">
		      <div class="docCell docCell--odd">.col--xs11</div>
		    </div>
		  </div>
		  <div class="row row--comfy">
		    <div class="col--xs2">
		      <div class="docCell docCell--even">.col--xs2</div>
		    </div>
		    <div class="col--xs10">
		      <div class="docCell docCell--odd">.col--xs10</div>
		    </div>
		  </div>
		  <div class="row row--comfy">
		    <div class="col--xs3">
		      <div class="docCell docCell--even">.col--xs3</div>
		    </div>
		    <div class="col--xs9">
		      <div class="docCell docCell--odd">.col--xs9</div>
		    </div>
		  </div>
		  <div class="row row--comfy">
		    <div class="col--xs4">
		      <div class="docCell docCell--even">.col--xs4</div>
		    </div>
		    <div class="col--xs8">
		      <div class="docCell docCell--odd">.col--xs8</div>
		    </div>
		  </div>
		  <div class="row row--comfy">
		    <div class="col--xs5">
		      <div class="docCell docCell--even">.col--xs5</div>
		    </div>
		    <div class="col--xs7">
		      <div class="docCell docCell--odd">.col--xs7</div>
		    </div>
		  </div>
		  <div class="row row--comfy">
		    <div class="col--xs6">
		      <div class="docCell docCell--even">.col--xs6</div>
		    </div>
		    <div class="col--xs6">
		      <div class="docCell docCell--odd">.col--xs6</div>
		    </div>
		  </div>
		</div>
	</div>
	<div class="src">
		<a href="http://ubnt-css.herokuapp.com/#/base/grid">Community Base Grid</a>
	</div>
</notextile>

{% highlight scss %}
<div class="container">
  <div class="row row--comfy">
    <div class="col--xs1">
      <div class="docCell docCell--even">.col--xs1</div>
    </div>
    <div class="col--xs11">
      <div class="docCell docCell--odd">.col--xs11</div>
    </div>
  </div>
  <div class="row row--comfy">
    <div class="col--xs2">
      <div class="docCell docCell--even">.col--xs2</div>
    </div>
    <div class="col--xs10">
      <div class="docCell docCell--odd">.col--xs10</div>
    </div>
  </div>
  <div class="row row--comfy">
    <div class="col--xs3">
      <div class="docCell docCell--even">.col--xs3</div>
    </div>
    <div class="col--xs9">
      <div class="docCell docCell--odd">.col--xs9</div>
    </div>
  </div>
  <div class="row row--comfy">
    <div class="col--xs4">
      <div class="docCell docCell--even">.col--xs4</div>
    </div>
    <div class="col--xs8">
      <div class="docCell docCell--odd">.col--xs8</div>
    </div>
  </div>
  <div class="row row--comfy">
    <div class="col--xs5">
      <div class="docCell docCell--even">.col--xs5</div>
    </div>
    <div class="col--xs7">
      <div class="docCell docCell--odd">.col--xs7</div>
    </div>
  </div>
  <div class="row row--comfy">
    <div class="col--xs6">
      <div class="docCell docCell--even">.col--xs6</div>
    </div>
    <div class="col--xs6">
      <div class="docCell docCell--odd">.col--xs6</div>
    </div>
  </div>
</div>
{% endhighlight %}
















h3. Responsive Columns

h5. Usage Notes

Resize the browser to see how the content reacts and reflows to the various breakpoints. Note how the content always fills the full width of the example's container, but each column has an equal amount of horizontal padding, unless explicitly set to no padding. Mixing the amount of padding can mess with alignment when changing between breakpoints.

<notextile>
	<div class="community noPadding">

		<div class="container noPadding noMargin container--responsive container--centered">
			<div class="row row--comfy">
			  <div class="col--xs3">
			    <div class="docCell docCell--even">.col--xs3</div>
			  </div>
			  <div class="col--xs3">
			    <div class="docCell docCell--odd">.col--xs3</div>
			  </div>
			  <div class="col--xs3">
			    <div class="docCell docCell--even">.col--xs3</div>
			  </div>
			  <div class="col--xs3">
			    <div class="docCell docCell--odd">.col--xs3</div>
			  </div>
			</div>
			<div class="row row--comfy">
			  <div class="col--xs12 col--md4 noPadding">
			    <div class="docCell docCell--even">.col--xs12 .col--md4 .noPadding</div>
			  </div>
			  <div class="col--xs12 col--md4 noPadding">
			    <div class="docCell docCell--odd">.col--xs12 .col--md4 .noPadding</div>
			  </div>
			  <div class="col--xs12 col--md4 noPadding">
			    <div class="docCell docCell--even">.col--xs12 .col--md4 .noPadding</div>
			  </div>
			</div>
			<div class="row row--comfy">
			  <div class="col--xs6">
			    <div class="docCell docCell--even">.col--xs6</div>
			  </div>
			  <div class="col--xs6">
			    <div class="docCell docCell--odd">.col--xs6</div>
			  </div>
			</div>
		</div>

	</div>
</notextile>

{% highlight html %}

<div class="container noPadding noMargin container--responsive container--centered">
	<div class="row row--comfy">
	  <div class="col--xs3">
	    <div class="docCell docCell--even">.col--xs3</div>
	  </div>
	  <div class="col--xs3">
	    <div class="docCell docCell--odd">.col--xs3</div>
	  </div>
	  <div class="col--xs3">
	    <div class="docCell docCell--even">.col--xs3</div>
	  </div>
	  <div class="col--xs3">
	    <div class="docCell docCell--odd">.col--xs3</div>
	  </div>
	</div>
	<div class="row row--comfy">
	  <div class="col--xs12 col--md4 noPadding">
	    <div class="docCell docCell--even">.col--xs12 .col--md4 .noPadding</div>
	  </div>
	  <div class="col--xs12 col--md4 noPadding">
	    <div class="docCell docCell--odd">.col--xs12 .col--md4 .noPadding</div>
	  </div>
	  <div class="col--xs12 col--md4 noPadding">
	    <div class="docCell docCell--even">.col--xs12 .col--md4 .noPadding</div>
	  </div>
	</div>
	<div class="row row--comfy">
	  <div class="col--xs6">
	    <div class="docCell docCell--even">.col--xs6</div>
	  </div>
	  <div class="col--xs6">
	    <div class="docCell docCell--odd">.col--xs6</div>
	  </div>
	</div>
</div>


{% endhighlight %}


































h3. Breakpoint Mixin Usage

Here is a corresponding mixing usage example. For example, to create a family of styles that only respond to the extra small breakpoint, we can do the following.

div(note). It's important to specify responsive breakpoints from the smallest and up, so avoid using the @-down@ classes. This way, when we specify a style from the smallest breakpoint and up, those styles will apply to all sizes.


<notextile>
	<div class="community">
		<div class="sg_breakpoint-mixin">Example text that turns red only on medium display sizes.</div> Widen or shrink the width to change the color.
	</div>
	<div class="src">
		<a href="http://ubnt-css.herokuapp.com/#/base/grid">Community Base Grid</a>
	</div>
</notextile>

{% highlight html %}

<div class="sg_breakpoint-mixin">Example text that turns red only on medium displays</div>

{% endhighlight %}

{% highlight scss %}

.sg_breakpoint-mixin { 
	@include respondTo(medium-only) {
		color: red !important;
	}
}

{% endhighlight %}


The mixin values work the exact same way as the breakpoint classes, but have slightly different names from the breakpoint variables and the breakpoint classes. Here they are as follows:


{% highlight scss %}

// XS
@include respondTo(xsmall-only) { ... }
@include respondTo(xsmall-up) { ... }
@include respondTo(xsmall-down) { ... }

// Small
@include respondTo(small-only) { ... }
@include respondTo(small-up) { ... }
@include respondTo(small-down) { ... }

// Medium
@include respondTo(medium-only) { ... }
@include respondTo(medium-up) { ... }
@include respondTo(medium-down) { ... }

// Large
@include respondTo(large-only) { ... }
@include respondTo(large-up) { ... }
@include respondTo(large-down) { ... }

// XLarge
@include respondTo(xlarge-only) { ... }
@include respondTo(xlarge-up) { ... }
@include respondTo(xlarge-down) { ... }

// XXLarge
@include respondTo(xxlarge-only) { ... }
@include respondTo(xxlarge-up) { ... }
@include respondTo(xxlarge-down) { ... }

{% endhighlight %}

